"""Add prompts to user profile

Revision ID: af6ba84eb024
Revises: cb6cc5b121e3
Create Date: 2025-02-02 21:19:48.374091

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'af6ba84eb024'
down_revision: Union[str, None] = 'cb6cc5b121e3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('matches', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('matches', 'match_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('matches_user_id_fkey', 'matches', type_='foreignkey')
    op.drop_constraint('matches_match_id_fkey', 'matches', type_='foreignkey')
    op.create_foreign_key(None, 'matches', 'users', ['match_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'matches', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('responses', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('responses_user_id_fkey', 'responses', type_='foreignkey')
    op.create_foreign_key(None, 'responses', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('users', sa.Column('selected_prompt1', sa.String(), nullable=True))
    op.add_column('users', sa.Column('selected_prompt2', sa.String(), nullable=True))
    op.add_column('users', sa.Column('selected_prompt3', sa.String(), nullable=True))
    op.add_column('users', sa.Column('response1', sa.String(), nullable=True))
    op.add_column('users', sa.Column('response2', sa.String(), nullable=True))
    op.add_column('users', sa.Column('response3', sa.String(), nullable=True))
    op.drop_column('users', 'prompt3')
    op.drop_column('users', 'prompt2')
    op.drop_column('users', 'prompt1')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('prompt1', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('prompt2', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('prompt3', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('users', 'response3')
    op.drop_column('users', 'response2')
    op.drop_column('users', 'response1')
    op.drop_column('users', 'selected_prompt3')
    op.drop_column('users', 'selected_prompt2')
    op.drop_column('users', 'selected_prompt1')
    op.drop_constraint(None, 'responses', type_='foreignkey')
    op.create_foreign_key('responses_user_id_fkey', 'responses', 'users', ['user_id'], ['id'])
    op.alter_column('responses', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.drop_constraint(None, 'matches', type_='foreignkey')
    op.create_foreign_key('matches_match_id_fkey', 'matches', 'users', ['match_id'], ['id'])
    op.create_foreign_key('matches_user_id_fkey', 'matches', 'users', ['user_id'], ['id'])
    op.alter_column('matches', 'match_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('matches', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
